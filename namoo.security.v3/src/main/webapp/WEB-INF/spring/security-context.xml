<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

	<!-- Spring Security Filter Chain -->
	<bean id="springSecurityFilterChain" class="org.springframework.security.util.FilterChainProxy">
		<security:filter-chain-map path-type="ant">
			<security:filter-chain pattern="/" filters="none" />
			<security:filter-chain pattern="/login" filters="none" />
			<security:filter-chain pattern="/**"
				filters="httpSessionContextIntegrationFilter
																		              , logoutFilter
																		              , authenticationProcessingFilter
																		              , rememberMeProcessingFilter
																		              , basicProcessingFilter
																		              , securityContextHolderAwareRequestFilter
																		              , anonymousProcessingFilter
																		              , exceptionTranslationFilter
																                  , filterSecurityInterceptor
																	                , roleFilter" />
		</security:filter-chain-map>
	</bean>

	<!-- =============================================================== -->
	<!-- FILTERS -->
	<!-- =============================================================== -->
	<bean id="roleFilter" class="namoo.security.v3.web.security.I2RoleFilter"/>

	<!-- ===== SESSION_CONTEXT_INTEGRATION_FILTER ====================== -->

	<bean id="httpSessionContextIntegrationFilter" class="org.springframework.security.context.HttpSessionContextIntegrationFilter" />

	<!-- ===== LOGOUT_FILTER =========================================== -->

	<bean id="logoutFilter" class="org.springframework.security.ui.logout.LogoutFilter">
		<constructor-arg value="/" />
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler" />
				<ref bean="rememberMeServices" />
			</list>
		</constructor-arg>
		<property name="filterProcessesUrl" value="/j_security_logout" />
	</bean>

	<!-- ===== AUTHENTICATION_PROCESSING_FILTER ======================= -->

	<bean id="authenticationProcessingFilter" class="namoo.security.v3.web.security.I2AuthenticationProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="rememberMeServices" ref="rememberMeServices" />
		<!-- 인증을 해제할경우 -->
		<property name="authenticationFailureUrl" value="/login?login_error=1" />
		<property name="defaultTargetUrl" value="/default" />
		<property name="alwaysUseDefaultTargetUrl" value="false" />
		<property name="filterProcessesUrl" value="/j_spring_security_check" />
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.security.BadCredentialsException">/login?login_error=2</prop>
				<!-- 없음..... -->
				<!-- <prop key="kr.nextree.vizend.web.security.NoAuthorityException">/login?login_error=3</prop> -->
				<prop key="org.springframework.security.ui.digestauth.NonceExpiredException">/login?login_error=4</prop>
			</props>
		</property>
	</bean>

	<bean id="formAuthenticationEntryPoint" class="namoo.security.v3.web.security.AjaxAwareAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login" />
		<property name="forceHttps" value="false" />
	</bean>

	<!-- ===== BASIC_PROCESSING_FILTER ================================= -->

	<bean id="basicProcessingFilter" class="namoo.security.v3.web.security.I2BasicProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationEntryPoint" ref="basicAuthenticationEntryPoint" />
	</bean>

	<bean id="basicAuthenticationEntryPoint" class="namoo.security.v3.web.security.I2BasicProcessingFilterEntryPoint">
	</bean>

	<!-- ===== SERVLET_API_SUPPORT_FILTER ============================== -->

	<bean id="securityContextHolderAwareRequestFilter" class="org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter" />

	<!-- ===== ANONYMOUS_FILTER ======================================== -->

	<bean id="anonymousProcessingFilter" class="org.springframework.security.providers.anonymous.AnonymousProcessingFilter">
		<property name="key" value="anonymous" />
		<property name="userAttribute" value="anonymous,ROLE_ANONYMOUS" />
	</bean>

	<!-- ===== EXCEPTION_TRANSLATION_FILTER ============================ -->

	<bean id="exceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint" ref="formAuthenticationEntryPoint" />
		<property name="accessDeniedHandler">
			<bean class="namoo.security.v3.web.security.AjaxAwareAccessDeniedHandler">
				<property name="errorPage" value="/common/errors/accessDenied.jsp" />
			</bean>
		</property>
	</bean>

	<bean id="notSaveRequestExceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint" ref="formAuthenticationEntryPoint" />
		<property name="createSessionAllowed" value="false" />
		<property name="accessDeniedHandler">
			<bean class="namoo.security.v3.web.security.AjaxAwareAccessDeniedHandler">
				<property name="errorPage" value="/common/errors/accessDenied.jsp" />
			</bean>
		</property>
	</bean>

	<!-- ===== REMEMBER_ME_FILDTER ================================= -->
	<bean id="rememberMeProcessingFilter" class="namoo.security.v3.web.security.I2RememberMeProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="rememberMeServices" ref="rememberMeServices" />
	</bean>

	<bean id="rememberMeServices" class="org.springframework.security.ui.rememberme.TokenBasedRememberMeServices">
		<property name="userDetailsService" ref="userDetailsService" />
		<!-- 이해가 필요 -->
		<property name="key" value="vizend.way" />
	</bean>

	<bean id="rememberMeAuthenticationProvider" class="org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider">
		<!-- 이해가 필요 -->
		<property name="key" value="vizend.way" />
	</bean>

	<bean id="userDetailsService" class="namoo.security.v3.web.security.I2UserDetailsService"/>

	<!-- ===== FILTER_SECURITY_INTERCEPTOR ============================ -->
	<bean id="filterSecurityInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="objectDefinitionSource" ref="i2ObjectDefinitionSource" />
	</bean>

	<bean id="i2ObjectDefinitionSource" class="namoo.security.v3.web.security.I2ObjectDefinitionSource"/>

	<bean id="accessDecisionManager" class="org.springframework.security.vote.ConsensusBased">
		<property name="allowIfAllAbstainDecisions" value="false" />
		<property name="decisionVoters">
			<list>
				<bean class="namoo.security.v3.web.security.I2RoleVoter" />
			</list>
		</property>
	</bean>

	<!-- =============================================================== -->
	<!-- AUTHENTICATION MANAGER & PROVIDER -->
	<!-- =============================================================== -->

	<bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref local="namoo.security.v3.web.security.I2AuthenticationProvider" />
				<ref local="rememberMeAuthenticationProvider" />
			</list>
		</property>
	</bean>

	<bean id="namoo.security.v3.web.security.I2AuthenticationProvider" class="namoo.security.v3.web.security.I2AuthenticationProvider"/>

</beans>
